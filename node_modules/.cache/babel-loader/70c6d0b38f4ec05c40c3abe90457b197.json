{"ast":null,"code":"var _jsxFileName = \"/Users/danilborisov/Documents/GitHub/shoeStoreReact/src/components/CheckoutForm/AddressForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddressForm = ({\n  checkoutToken,\n  next\n}) => {\n  _s();\n\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubDivisons] = useState([]);\n  const [shippingSubdivision, setShippingSubDivison] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n  const countries = Object.entries(shippingCountries).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const subdivisions = Object.entries(shippingSubDivisions).map(([code, name]) => ({\n    id: code,\n    label: name\n  }));\n  const options = shippingOptions.map(sO => ({\n    id: sO.id,\n    label: `${sO.description} - (${sO.price.formatted_with_symbol})`\n  }));\n\n  const fetchShippingCountries = async checkoutTokenId => {\n    const {\n      countries\n    } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisons = async countryCode => {\n    const {\n      subdivisions\n    } = await commerce.services.localeListSubdivisions(countryCode);\n    setShippingSubDivisons(subdivisions);\n    setShippingSubDivison(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {\n      country,\n      region\n    });\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n    console.log(checkoutToken);\n  }, []);\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisons(shippingCountry);\n  }, [shippingCountry]);\n  useEffect(() => {\n    if (shippingSubDivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubDivision);\n  }, [shippingSubDivision]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"Shipping Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, { ...methods,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: methods.handleSubmit(data => next({ ...data,\n          shippingCountry,\n          shippingSubDivision,\n          shippingOption\n        })),\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"firstName\",\n            label: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"lastName\",\n            label: \"Last name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"address1\",\n            label: \"Address line 1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"email\",\n            label: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"city\",\n            label: \"City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            required: true,\n            name: \"zip\",\n            label: \"Zip / Postal code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingCountry,\n              fullWidth: true,\n              onChange: e => setShippingCountry(e.target.value),\n              children: countries.map(country => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: country.id,\n                children: country.label\n              }, country.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Subdivision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingSubDivision,\n              fullWidth: true,\n              onChange: e => setShippingSubDivison(e.target.value),\n              children: subdivisions.map(subdivision => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: subdivision.id,\n                children: subdivision.label\n              }, subdivision.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              children: \"Shipping Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              value: shippingOption,\n              fullWidth: true,\n              onChange: e => setShippingOption(e.target.value),\n              children: options.map(option => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: option.id,\n                children: option.label\n              }, option.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'space-between'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            component: Link,\n            to: \"/cart\",\n            variant: \"outlined\",\n            children: \"Back to Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddressForm, \"owfXH57sH7+z3hjNUErJVTQ+dXY=\", false, function () {\n  return [useForm];\n});\n\n_c = AddressForm;\nexport default AddressForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressForm\");","map":{"version":3,"sources":["/Users/danilborisov/Documents/GitHub/shoeStoreReact/src/components/CheckoutForm/AddressForm.jsx"],"names":["React","useState","useEffect","InputLabel","Select","MenuItem","Button","Grid","Typography","useForm","FormProvider","Link","commerce","FormInput","AddressForm","checkoutToken","next","shippingCountries","setShippingCountries","shippingCountry","setShippingCountry","shippingSubdivisions","setShippingSubDivisons","shippingSubdivision","setShippingSubDivison","shippingOptions","setShippingOptions","shippingOption","setShippingOption","methods","countries","Object","entries","map","code","name","id","label","subdivisions","shippingSubDivisions","options","sO","description","price","formatted_with_symbol","fetchShippingCountries","checkoutTokenId","services","localeListShippingCountries","keys","fetchSubdivisons","countryCode","localeListSubdivisions","fetchShippingOptions","country","region","checkout","getShippingOptions","console","log","shippingSubDivision","handleSubmit","data","e","target","value","subdivision","option","display","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport {commerce} from '../../lib/commerce';\n\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({checkoutToken, next}) => {\n    const [shippingCountries ,setShippingCountries]= useState([]);\n    const [shippingCountry ,setShippingCountry]= useState('');\n    const [shippingSubdivisions ,setShippingSubDivisons]= useState([]);\n    const [shippingSubdivision ,setShippingSubDivison]= useState('');\n    const [shippingOptions ,setShippingOptions]= useState([]);\n    const [shippingOption ,setShippingOption]= useState('');\n    const methods = useForm();\n   \n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({id: code, label: name}));\n    const subdivisions = Object.entries(shippingSubDivisions).map(([code, name]) => ({id: code, label: name}));\n    const options = shippingOptions.map((sO) => ({id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` }));\n\n    const fetchShippingCountries = async (checkoutTokenId) => {\n\n        const {countries} = await commerce.services.localeListShippingCountries(checkoutTokenId);\n        \n        setShippingCountries(countries);\n        setShippingCountry(Object.keys(countries)[0]);\n\n\n    }\n\n    const fetchSubdivisons = async(countryCode) => {\n        const { subdivisions} = await commerce.services.localeListSubdivisions(countryCode);\n\n        setShippingSubDivisons(subdivisions);\n        setShippingSubDivison(Object.keys(subdivisions)[0]);\n\n\n    }\n\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\n        const options = await commerce.checkout.getShippingOptions(checkoutTokenId, {country, region});\n\n        setShippingOptions(options);\n        setShippingOption(options[0].id);\n    }\n\n    useEffect(() =>{\n        fetchShippingCountries(checkoutToken.id);\n        console.log(checkoutToken)\n    }, []);\n\n    useEffect(() =>{\n        if(shippingCountry) fetchSubdivisons(shippingCountry);\n    }, [shippingCountry]);\n\n    useEffect(() =>{\n        if(shippingSubDivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubDivision)\n    },[shippingSubDivision]);\n\n    return (\n        <>\n            <Typography variant=\"h6\" gutterBottom>Shipping Address</Typography>\n            <FormProvider {...methods}>\n                <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingSubDivision, shippingOption}))}>\n                    <Grid container spacing={3}>\n                        <FormInput required name='firstName' label='First Name'/>\n                        <FormInput required name=\"lastName\" label=\"Last name\" />\n                        <FormInput required name=\"address1\" label=\"Address line 1\" />\n                        <FormInput required name=\"email\" label=\"Email\" />\n                        <FormInput required name=\"city\" label=\"City\" />\n                        <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Country</InputLabel>\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                                {countries.map((country) => (\n                                    <MenuItem key={country.id} value={country.id}>\n                                        {country.label}\n                                    </MenuItem>\n                                ))}\n                                \n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Subdivision</InputLabel>\n                            <Select value={shippingSubDivision} fullWidth onChange={(e) => setShippingSubDivison(e.target.value)}>\n                                {subdivisions.map((subdivision) => (\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\n                                        {subdivision.label}\n                                    </MenuItem>\n                                ))}\n                                \n                            </Select>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <InputLabel>Shipping Options</InputLabel>\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                                {options.map((option) => (\n                                    <MenuItem key={option.id} value={option.id}>\n                                        {option.label}\n                                    </MenuItem>\n                                ))}\n                            </Select>\n                        </Grid>\n                    </Grid>\n                    <br/>\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}> \n                        <Button component={Link} to=\"/cart\" variant=\"outlined\">Back to Cart</Button>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n                    </div>\n                </form>\n\n            </FormProvider>\n        </>\n    )\n}\n\nexport default AddressForm\n"]},"metadata":{},"sourceType":"module"}